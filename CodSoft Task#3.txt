import tkinter as tk
import random
import string

def generate_password():
    password_length = int(length_entry.get())
    complexity = complexity_var.get()

    if password_length < 4:
        result_label.config(text="Length should be at least 4 characters", fg="red")
        return

    lowercase_letters = string.ascii_lowercase
    uppercase_letters = string.ascii_uppercase
    digits = string.digits
    special_characters = "!@#$%^&*()_+[]{}|;:,.<>?"

    if complexity == "simple":
        all_characters = lowercase_letters + uppercase_letters
    elif complexity == "medium":
        all_characters = lowercase_letters + uppercase_letters + digits
    else:  # complex
        all_characters = lowercase_letters + uppercase_letters + digits + special_characters

    if password_length > len(all_characters):
        result_label.config(text="Length is too long", fg="red")
        return

    password = ''.join(random.choice(all_characters) for _ in range(password_length))
    result_label.config(text="Generated Password: " + password, fg="green")

# Create main window
root = tk.Tk()
root.title("Password Generator")
root.geometry("700x400")  # Increased window size

# Set font
font = ("Arial", 18)  # Adjusted font size

# Create widgets
label = tk.Label(root, text="Password Length:", font=font)
label.pack(pady=15)  # Increased padding

length_entry = tk.Entry(root, font=font)
length_entry.pack(pady=15)  # Increased padding

complexity_label = tk.Label(root, text="Complexity:", font=font)
complexity_label.pack(pady=15)  # Increased padding

complexity_var = tk.StringVar(root)
complexity_var.set("simple")
complexity_dropdown = tk.OptionMenu(root, complexity_var, "simple", "medium", "complex")
complexity_dropdown.pack(pady=15)  # Increased padding

generate_button = tk.Button(root, text="Generate Password", command=generate_password, font=font)
generate_button.pack(pady=20)  # Increased padding

result_label = tk.Label(root, text="", font=font)
result_label.pack(pady=20)  # Increased padding

root.mainloop()
